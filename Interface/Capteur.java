/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import com.github.sarxos.webcam.Webcam;
import java.io.Closeable;
import java.io.IOException;
import java.awt.FlowLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;

import javax.swing.JFrame;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.util.concurrent.Exchanger;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ahlam
 */
public class Capture extends javax.swing.JFrame implements Closeable{
    private static final long serialVersionUID = 1L;

	private Webcam webcam = null;
	private BufferedImage image = null;
	private Result result = null;
	private Exchanger<String> exchanger = new Exchanger<String>();


    /**
     * Creates new form Capture
     */
    public Capture() {
        setLayout(new FlowLayout());
		setTitle("Capture");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

		addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosing(WindowEvent e) {
                            close();
			}
		});
    webcam = Webcam.getWebcams().get(1);// changer en USB ou default
		webcam.setViewSize(WebcamResolution.QVGA.getSize());
		webcam.open();

		add(new WebcamPanel(webcam));

		pack();
		setVisible(true);

		final Thread daemon = new Thread(new Runnable() {

			@Override
			public void run() {
				while (isVisible()) {
					read();
				}
			}
		});
		daemon.setDaemon(true);
		daemon.start();
	}
    private static BinaryBitmap toBinaryBitmap(BufferedImage image) {
		return new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(image)));
	}
    private void read() {

		if (!webcam.isOpen()) {
			return;
		}
		if ((image = webcam.getImage()) == null) {
			return;
		}

		try {
			result = new MultiFormatReader().decode(toBinaryBitmap(image));
		} catch (NotFoundException e) {
			return; // fall thru, it means there is no QR code in image
		}

		if (result != null) {
			try {
				exchanger.exchange(result.getText());
			} catch (InterruptedException e) {
				return;
			} finally {
				dispose();
			}
		}
    }
    public String getResult() throws InterruptedException {
		return exchanger.exchange(null);
	}
@Override
	public void close() {
		webcam.close();
	}
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        



